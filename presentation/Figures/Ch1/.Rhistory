## cleaning the workspace
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## loading packages
library(RColorBrewer)
## loading functions
source("ParamModels.R")
var.keep <- c("fx_GompLS","mu_GompLS")
rm(list=setdiff(ls(),var.keep))
## ages and parameters
ages <- x <- 20:120
m <- length(x)
u_init <- 80
c_init <- 10
mx_init <- mu_GompLS(c(u_init,c_init),ages)
fx_init <- fx_GompLS(c(u_init,c_init),ages)
## changes location
u_up <- 100
u_low <- 60
mx_u_up <- mu_GompLS(c(u_up,c_init),ages)
fx_u_up <- fx_GompLS(c(u_up,c_init),ages)
mx_u_low <- mu_GompLS(c(u_low,c_init),ages)
fx_u_low <- fx_GompLS(c(u_low,c_init),ages)
## changes scale
c_up <- 15
c_low <- 7.5
mx_c_up <- mu_GompLS(c(u_init,c_up),ages)
fx_c_up <- fx_GompLS(c(u_init,c_up),ages)
mx_c_low <- mu_GompLS(c(u_init,c_low),ages)
fx_c_low <- fx_GompLS(c(u_init,c_low),ages)
## plot
mx_lim <- range(mx_c_low,mx_c_up,mx_u_low,mx_u_up)
fx_lim <- range(fx_c_low,fx_c_up,fx_u_low,fx_u_up)
plot(x,mx_init,log="y",ylim=mx_lim,t='l',lwd=2)
lines(x,mx_u_low,col=2,lwd=2)
## cleaning the workspace
rm(list = ls())
options(device = "X11")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## loading packages
library(RColorBrewer)
## loading functions
source("ParamModels.R")
var.keep <- c("fx_GompLS","mu_GompLS")
rm(list=setdiff(ls(),var.keep))
## ages and parameters
ages <- x <- 20:120
m <- length(x)
u_init <- 80
c_init <- 10
mx_init <- mu_GompLS(c(u_init,c_init),ages)
fx_init <- fx_GompLS(c(u_init,c_init),ages)
## changes location
u_up <- 100
u_low <- 60
mx_u_up <- mu_GompLS(c(u_up,c_init),ages)
fx_u_up <- fx_GompLS(c(u_up,c_init),ages)
mx_u_low <- mu_GompLS(c(u_low,c_init),ages)
fx_u_low <- fx_GompLS(c(u_low,c_init),ages)
## changes scale
c_up <- 15
c_low <- 7.5
mx_c_up <- mu_GompLS(c(u_init,c_up),ages)
fx_c_up <- fx_GompLS(c(u_init,c_up),ages)
mx_c_low <- mu_GompLS(c(u_init,c_low),ages)
fx_c_low <- fx_GompLS(c(u_init,c_low),ages)
## plot
mx_lim <- range(mx_c_low,mx_c_up,mx_u_low,mx_u_up)
fx_lim <- range(fx_c_low,fx_c_up,fx_u_low,fx_u_up)
plot(x,mx_init,log="y",ylim=mx_lim,t='l',lwd=2)
## plot
mx_lim <- range(mx_c_low,mx_c_up,mx_u_low,mx_u_up)
fx_lim <- range(fx_c_low,fx_c_up,fx_u_low,fx_u_up)
plot(x,mx_init,log="y",ylim=mx_lim,t='l',lwd=2)
lines(x,mx_u_low,col=2,lwd=2)
lines(x,mx_u_up,col=3,lwd=2)
lines(x,mx_c_low,col=4,lwd=2)
lines(x,mx_c_up,col=5,lwd=2)
plot(x,mx_init,log="y",ylim=mx_lim,t='l')
lines(x,mx_u_low,col=2)
lines(x,mx_u_up,col=3)
lines(x,mx_c_low,col=4)
lines(x,mx_c_up,col=5)
## cleaning the workspace
rm(list = ls())
options(device = "X11")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## loading packages
library(RColorBrewer)
library(fields)
## loading functions
source("ParamModels.R")
var.keep <- c("fx_GompLS","mu_GompLS")
rm(list=setdiff(ls(),var.keep))
## ages and parameters
ages <- x <- 30:110
m <- length(x)
u_init <- 80
c_init <- 10
mx_init <- mu_GompLS(c(u_init,c_init),ages)
fx_init <- fx_GompLS(c(u_init,c_init),ages)
xs <- seq(x[1],x[m],0.1)
fx_smo <- fx_GompLS(c(u_init,c_init),xs)
## changes location
u_up <- 95
u_low <- 65
mx_u_up <- mu_GompLS(c(u_up,c_init),ages)
fx_u_up <- fx_GompLS(c(u_up,c_init),ages)
mx_u_low <- mu_GompLS(c(u_low,c_init),ages)
fx_u_low <- fx_GompLS(c(u_low,c_init),ages)
## changes scale
c_up <- 12.5
c_low <- 7.5
mx_c_up <- mu_GompLS(c(u_init,c_up),ages)
fx_c_up <- fx_GompLS(c(u_init,c_up),ages)
mx_c_low <- mu_GompLS(c(u_init,c_low),ages)
fx_c_low <- fx_GompLS(c(u_init,c_low),ages)
## plot
mx_lim <- range(mx_c_low,mx_c_up,mx_u_low,mx_u_up)
fx_lim <- range(fx_c_low,fx_c_up,fx_u_low,fx_u_up)
plot(x,mx_init,log="y",ylim=mx_lim,t='l',lwd=2)
plot(x,mx_init,log="y",ylim=mx_lim,t='l',lwd=2)
lines(x,mx_u_low,col=2,lwd=2)
lines(x,mx_u_up,col=3,lwd=2)
lines(x,mx_c_low,col=4,lwd=2)
lines(x,mx_c_up,col=5,lwd=2)
plot(x,fx_init,ylim=fx_lim,t='l')
lines(x,fx_u_low,col=2)
lines(x,fx_u_up,col=3)
lines(x,fx_c_low,col=4)
lines(x,fx_c_up,col=5)
## series
ns <- 19
US <- round(seq(u_low,u_up,length.out = ns))
US.long <- seq(u_low,u_up)
u.seq.start <- 90
order <- c(seq(which(US==u.seq.start),which(US==u_up)),
seq((which(US==u_up)-1),which(US==u_low)),
seq((which(US==u_low)+1),(which(US==u.seq.start)-1)))
n.order <- length(order)
CS <- round(seq(c_low,c_up,length.out = ns),1)
CS.long <- seq(c_low,c_up,length.out = length(US.long))
c.seq.start <- CS[4]
order_c <- c(seq(which(CS==c.seq.start),which(CS==c_low)),
seq((which(CS==c_low)+1),which(CS==c_up)),
seq((which(CS==c_up)-1),(which(CS==c.seq.start)+1)))
n.order_c <- length(order_c)
MX_U <- FX_U <- MX_C <- FX_C <- matrix(NA,m,ns)
for (i in 1:ns){
MX_U[,i] <- mu_GompLS(c(US[i],c_init),ages)
FX_U[,i] <- fx_GompLS(c(US[i],c_init),ages)
MX_C[,i] <- mu_GompLS(c(u_init,CS[i]),ages)
FX_C[,i] <- fx_GompLS(c(u_init,CS[i]),ages)
}
### SAVE PLOTS ### SAVE PLOTS
### SAVE PLOTS ### SAVE PLOTS
setwd("U:/Work/Thesis/Github/presentation/Figures/Ch1")
SAVE <- T
SAVE <- F
cex.x.axis <- 1.15
cex.y.axis <- 1
cex.x.lab <- 1.75
cex.y.lab <- 1.75
cex.title <- 1.5
cex.main <- 1.75
cex.leg <- 1.25
cex.lab.leg <- 0.5
lwd.main <- 2.5
lwd.sub <- 1.5
pt.cex <- 1
my.reds <- colorRampPalette(brewer.pal(9, "Reds")[-c(1:2,9)])(ns)
my.reds.leg <- colorRampPalette(brewer.pal(9, "Reds")[-c(1:2,9)])(length(US.long))
my.reds.leg[which(US.long==u_init)] <- 1
my.blues <- colorRampPalette(brewer.pal(9, "Blues")[-c(1:2,9)])(ns)
my.blues.leg <- colorRampPalette(brewer.pal(9, "Blues")[-c(1:2,9)])(length(CS.long))
my.blues.leg[which(CS.long==c_init)] <- 1
##----- VERSION A: ANIMATION LOCATION --------
if (SAVE) pdf("F2_anim_location.pdf",width = 10,height = 6)
j <- 0
for (j in 0:n.order){
par(mfrow=c(1,2),
oma=c(1,1,1,1),
mar=c(3,3,2,1))
## bottom, left, top, right
plot(x,mx_init,t="n",log = "y",axes = F,xlab="",ylab="",ylim=mx_lim)
axis(1,cex.axis=cex.x.axis,padj = -0.25)
axis(2,cex.axis=cex.y.axis,padj = -0.25,at=c(1e-4,1e-2,1e0),
labels = c("0.0001","0.01","1"))
grid();box()
title(main=expression(paste("hazard (",log[10]," scale)")),cex.main=cex.main)
if (j > 0){
if (US[order[j]] > u_init){
arrows(x0=80,x1=80,y0=mx_init[x==80],y1=MX_U[x==80,order[j]],
col=my.reds[order[j]],angle = 30,lwd=1.5,length = 0.1)
mu.targ <- mx_init[x==80]
x.targ <- x[which(MX_U[,order[j]]==mu.targ)]
arrows(x0=80,x1=x.targ,y0=mx_init[x==80],y1=mx_init[x==80],
col=my.reds[order[j]],angle = 30,lwd=1.5,length = 0.1)
text(85,MX_U[x==80,order[j]]+0.003, expression(u^"+"),
col=my.reds[order[j]], font=1, cex=1.2)
}else if (US[order[j]] < u_init){
arrows(x0=80,x1=80,y0=mx_init[x==80],y1=MX_U[x==80,order[j]],
col=my.reds[order[j]],angle = 30,lwd=1.5,length = 0.1,code=2)
mu.targ <- mx_init[x==80]
x.targ <- x[which(MX_U[,order[j]]==mu.targ)]
arrows(x0=80,x1=x.targ,y0=mx_init[x==80],y1=mx_init[x==80],
col=my.reds[order[j]],angle = 30,lwd=1.5,length = 0.1)
text(85,MX_U[x==80,order[j]]+0.003, expression(u^"-"),
col=my.reds[order[j]], font=1, cex=1.2)
}else{
text(85,MX_U[x==80,order[j]]+0.003, expression(u),
col=1, font=1, cex=1.2)
}
lines(ages,MX_U[,order[j]],lwd=2,col=my.reds[order[j]],lty = 1)
image.plot(smallplot = c(.22,.52,.83,.86),legend.only = T,zlim=range(US),
col=my.reds.leg,cex.lab=cex.lab.leg,nlevel = ns*2,horizontal = T,
legend.cex = cex.leg,legend.lab = "Location (u)",legend.line = -2.3)
}
lines(ages,mx_init,lwd=2,col=1)
plot(x,fx_init,t="n",axes = F,xlab="",ylab="",ylim=fx_lim)
axis(1,cex.axis=cex.x.axis,padj = -0.25)
axis(2,cex.axis=cex.y.axis,padj = -0.25,at=seq(0,0.05,0.01),
labels = c("0","0.01","0.02","0.03","0.04","0.05"))
grid();box()
title(main=expression(paste("density")),cex.main=cex.main)
lines(ages,fx_init,lwd=2,col=1)
if (j>0){
lines(ages,FX_U[,order[j]],lwd=2,col=my.reds[order[j]],lty = 1)
image.plot(smallplot = c(.22,.52,.83,.86),legend.only = T,zlim=range(US),
col=my.reds.leg,cex.lab=cex.lab.leg,nlevel = ns*2,horizontal = T,
legend.cex = cex.leg,legend.lab = "Location (u)",legend.line = -2.3)
segments(x0=xs[which.max(fx_smo)],
y0=fx_smo[which.max(fx_smo)], y1=-10, col=1,
lwd=1, lty=2)
fx.curr <- fx_GompLS(c(US[order[j]],c_init),xs)
segments(x0=xs[which.max(fx.curr)],
y0=fx.curr[which.max(fx.curr)], y1=-10, col=my.reds[order[j]],
lwd=1, lty=2)
h.s <- 0.038
x1 <- xs[which.max(fx_smo)]
x2 <- xs[which.max(fx.curr)]
if (US[order[j]] > u_init){
brackets(x1, h.s, x2, h.s, lwd=1.75,
col=my.reds[order[j]], h=0.00080)
text(((x1+x2)/2), h.s+0.003, expression(u^"+"),
col=my.reds[order[j]], font=1, cex=1.2)
}else if (US[order[j]] < u_init){
brackets(x2, h.s, x1, h.s, lwd=1.75,
col=my.reds[order[j]], h=0.00080)
text(((x1+x2)/2), h.s+0.003, expression(u^"-"),
col=my.reds[order[j]], font=1, cex=1.2)
}else{
text(((x1+x2)/2), h.s+0.003, expression(u),
col=1, font=1, cex=1.2)
}
}
par(mfrow=c(1,1))
mtext("age",side=1,cex=cex.x.lab,line=2)
}
library(pBrackets)
j <- 0
for (j in 0:n.order){
par(mfrow=c(1,2),
oma=c(1,1,1,1),
mar=c(3,3,2,1))
## bottom, left, top, right
plot(x,mx_init,t="n",log = "y",axes = F,xlab="",ylab="",ylim=mx_lim)
axis(1,cex.axis=cex.x.axis,padj = -0.25)
axis(2,cex.axis=cex.y.axis,padj = -0.25,at=c(1e-4,1e-2,1e0),
labels = c("0.0001","0.01","1"))
grid();box()
title(main=expression(paste("hazard (",log[10]," scale)")),cex.main=cex.main)
if (j > 0){
if (US[order[j]] > u_init){
arrows(x0=80,x1=80,y0=mx_init[x==80],y1=MX_U[x==80,order[j]],
col=my.reds[order[j]],angle = 30,lwd=1.5,length = 0.1)
mu.targ <- mx_init[x==80]
x.targ <- x[which(MX_U[,order[j]]==mu.targ)]
arrows(x0=80,x1=x.targ,y0=mx_init[x==80],y1=mx_init[x==80],
col=my.reds[order[j]],angle = 30,lwd=1.5,length = 0.1)
text(85,MX_U[x==80,order[j]]+0.003, expression(u^"+"),
col=my.reds[order[j]], font=1, cex=1.2)
}else if (US[order[j]] < u_init){
arrows(x0=80,x1=80,y0=mx_init[x==80],y1=MX_U[x==80,order[j]],
col=my.reds[order[j]],angle = 30,lwd=1.5,length = 0.1,code=2)
mu.targ <- mx_init[x==80]
x.targ <- x[which(MX_U[,order[j]]==mu.targ)]
arrows(x0=80,x1=x.targ,y0=mx_init[x==80],y1=mx_init[x==80],
col=my.reds[order[j]],angle = 30,lwd=1.5,length = 0.1)
text(85,MX_U[x==80,order[j]]+0.003, expression(u^"-"),
col=my.reds[order[j]], font=1, cex=1.2)
}else{
text(85,MX_U[x==80,order[j]]+0.003, expression(u),
col=1, font=1, cex=1.2)
}
lines(ages,MX_U[,order[j]],lwd=2,col=my.reds[order[j]],lty = 1)
image.plot(smallplot = c(.22,.52,.83,.86),legend.only = T,zlim=range(US),
col=my.reds.leg,cex.lab=cex.lab.leg,nlevel = ns*2,horizontal = T,
legend.cex = cex.leg,legend.lab = "Location (u)",legend.line = -2.3)
}
lines(ages,mx_init,lwd=2,col=1)
plot(x,fx_init,t="n",axes = F,xlab="",ylab="",ylim=fx_lim)
axis(1,cex.axis=cex.x.axis,padj = -0.25)
axis(2,cex.axis=cex.y.axis,padj = -0.25,at=seq(0,0.05,0.01),
labels = c("0","0.01","0.02","0.03","0.04","0.05"))
grid();box()
title(main=expression(paste("density f(x)")),cex.main=cex.main)
lines(ages,fx_init,lwd=2,col=1)
if (j>0){
lines(ages,FX_U[,order[j]],lwd=2,col=my.reds[order[j]],lty = 1)
image.plot(smallplot = c(.22,.52,.83,.86),legend.only = T,zlim=range(US),
col=my.reds.leg,cex.lab=cex.lab.leg,nlevel = ns*2,horizontal = T,
legend.cex = cex.leg,legend.lab = "Location (u)",legend.line = -2.3)
segments(x0=xs[which.max(fx_smo)],
y0=fx_smo[which.max(fx_smo)], y1=-10, col=1,
lwd=1, lty=2)
fx.curr <- fx_GompLS(c(US[order[j]],c_init),xs)
segments(x0=xs[which.max(fx.curr)],
y0=fx.curr[which.max(fx.curr)], y1=-10, col=my.reds[order[j]],
lwd=1, lty=2)
h.s <- 0.038
x1 <- xs[which.max(fx_smo)]
x2 <- xs[which.max(fx.curr)]
if (US[order[j]] > u_init){
brackets(x1, h.s, x2, h.s, lwd=1.75,
col=my.reds[order[j]], h=0.00080)
text(((x1+x2)/2), h.s+0.003, expression(u^"+"),
col=my.reds[order[j]], font=1, cex=1.2)
}else if (US[order[j]] < u_init){
brackets(x2, h.s, x1, h.s, lwd=1.75,
col=my.reds[order[j]], h=0.00080)
text(((x1+x2)/2), h.s+0.003, expression(u^"-"),
col=my.reds[order[j]], font=1, cex=1.2)
}else{
text(((x1+x2)/2), h.s+0.003, expression(u),
col=1, font=1, cex=1.2)
}
}
par(mfrow=c(1,1))
mtext("age",side=1,cex=cex.x.lab,line=2)
}
if (SAVE) dev.off()
##----- VERSION A: ANIMATION SCALE --------
if (SAVE) pdf("F2_anim_scale.pdf",width = 10,height = 6)
j <- 1
for (j in 1:n.order_c){
par(mfrow=c(1,2),
oma=c(1,1,1,1),
mar=c(3,3,2,1))
## bottom, left, top, right
plot(x,mx_init,t="n",log = "y",axes = F,xlab="",ylab="",ylim=mx_lim)
axis(1,cex.axis=cex.x.axis,padj = -0.25)
axis(2,cex.axis=cex.y.axis,padj = -0.25,at=c(1e-4,1e-2,1e0),
labels = c("0.0001","0.01","1"))
grid();box()
title(main=expression(paste("hazard (",log[10]," scale)")),cex.main=cex.main)
lines(ages,mx_init,lwd=2,col=1)
lines(ages,MX_C[,order_c[j]],lwd=2,col=my.blues[order_c[j]],lty = 1)
image.plot(smallplot = c(.22,.52,.83,.86),legend.only = T,zlim=range(CS),
col=my.blues.leg,cex.lab=cex.lab.leg,nlevel = ns*2,horizontal = T,
legend.cex = cex.leg,legend.lab = "Scale (c)",legend.line = -2.3)
if (CS[order_c[j]] > c_init){
text(100,(MX_C[x==90,order_c[j]]), expression(c^"+"),
col=my.blues[order_c[j]], font=1, cex=1.2)
}else if (CS[order_c[j]] < c_init){
text(100,(MX_C[x==110,order_c[j]]), expression(c^"-"),
col=my.blues[order_c[j]], font=1, cex=1.2)
}else{
text(100,MX_C[x==90,order_c[j]], expression(c),
col=1, font=1, cex=1.2)
}
plot(x,fx_init,t="n",axes = F,xlab="",ylab="",ylim=fx_lim)
axis(1,cex.axis=cex.x.axis,padj = -0.25)
axis(2,cex.axis=cex.y.axis,padj = -0.25,at=seq(0,0.05,0.01),
labels = c("0","0.01","0.02","0.03","0.04","0.05"))
grid();box()
title(main=expression(paste("density")),cex.main=cex.main)
lines(ages,fx_init,lwd=2,col=1)
lines(ages,FX_C[,order_c[j]],lwd=2,col=my.blues[order_c[j]],lty = 1)
image.plot(smallplot = c(.22,.52,.83,.86),legend.only = T,zlim=range(CS),
col=my.blues.leg,cex.lab=cex.lab.leg,nlevel = ns*2,horizontal = T,
legend.cex = cex.leg,legend.lab = "Scale (c)",legend.line = -2.3)
fx.curr <- fx_GompLS(c(u_init,CS[order_c[j]]),xs)
segments(x0=80,
y0=max(fx.curr), y1=-10, col=my.blues[order_c[j]],
lwd=1, lty=2)
h.s <- 0.038
y1 <- max(fx_init)
y2 <- max(fx.curr)
if (CS[order_c[j]] > c_init){
brackets(90, y1, 90, y2, lwd=1.75,
col=my.blues[order_c[j]], h=1.00080)
text(95,((y1+y2)/2), expression(c^"+"),
col=my.blues[order_c[j]], font=1, cex=1.2)
}else if (CS[order_c[j]] < c_init){
brackets(90, y2, 90, y1, lwd=1.75,
col=my.blues[order_c[j]], h=1.00080)
text(95,((y1+y2)/2), expression(c^"-"),
col=my.blues[order_c[j]], font=1, cex=1.2)
}else{
text(95,((y1+y2)/2), expression(c),
col=1, font=1, cex=1.2)
}
par(mfrow=c(1,1))
mtext("age",side=1,cex=cex.x.lab,line=2)
}
if (SAVE) dev.off()
source('U:/Work/Thesis/Github/presentation/Code/Ch1/02_Location-scale examples.R', echo=TRUE)
source('U:/Work/Thesis/Github/presentation/Code/Ch1/02_Location-scale examples.R', echo=TRUE)
